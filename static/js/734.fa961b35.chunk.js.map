{"version":3,"file":"static/js/734.fa961b35.chunk.js","mappings":"mLAkGA,UAxFyB,SAAH,GAAuD,IAAlDA,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cACtD,GAAoBC,EAAAA,EAAAA,MAAbC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAELC,GAAaC,EAAAA,EAAAA,QAAO,OAC1BC,EAAAA,EAAAA,YAAU,WACPC,EAAAA,GAAAA,OAAYH,EAAWI,QACpB,CAACC,GAAI,GAAIC,QAAS,GAClB,CAACC,SAAU,EAAGF,EAAG,EAAGC,QAAS,EAAGE,MAAO,IAAKC,KAAM,wBAExD,GAAG,CAACX,EAAIC,IAYR,IASMW,EAA0B,WAC7B,OACG,iCACG,iBAAKC,UAAU,uBAAsB,WAClC,gBAAKA,UAAU,2FAA0F,UACtG,gBAAKC,IAAKnB,EAAKoB,SAAUC,IAAI,YAAYH,UAAU,yDAEtD,8BAAMlB,EAAKsB,SAAQ,WAEtB,gBAAIJ,UAAU,kCAAiC,uCAA4BlB,EAAKsB,SAAQ,cAGjG,EAEMC,EAAsB,WAEzB,IAFgC,IAAD,MAC3BC,EACKC,EAAI,EAAGA,EAAIzB,EAAK0B,UAAUC,UAChCH,EAAWxB,EAAK0B,UAAUD,GAAGG,UAAUC,MAAK,SAAAL,GAAQ,OAAIA,EAASM,aAAexB,CAAK,OAD3CmB,GAK7C,IAAMM,EAAkC,UAAnB,QAAR,EAAAP,SAAQ,aAAR,EAAUQ,eACrB,SAAC,MAAsB,CAACd,UAAU,wBAClC,SAAC,MAAc,CAACA,UAAU,uBAE5B,OACG,iCACG,gBAAKA,UAAU,uBAAsB,UAClC,gBAAIA,UAAU,0BAAyB,0BAAea,EAAI,IAAW,QAAX,EAAGP,SAAQ,aAAR,EAAUS,mBAE1E,gBAAIf,UAAU,kCAAiC,uCAAoC,QAApC,EAA4BM,SAAQ,aAAR,EAAUS,aAAY,mBAG1G,EAEA,OACG,iBAAKf,UAAU,uDAAuDgB,IAAK3B,EAAW,WACnF,gBAAKW,UAAU,6DAA4D,SA9CtD,WACxB,GAAIlB,EACD,OAAIM,IAAUN,EAAKmC,aACTlB,IAEAM,GAEhB,CAwCUa,KAGFnC,IACC,eAAIiB,UAAU,0BAA0Bb,GAAG,WAAU,SAChDJ,EAASoC,KAAI,SAACC,GAAO,OACpB,SAAC,IAAO,CACLrC,SAAUA,EACVqC,QAASA,EAETpC,aAAcA,EACdC,cAAeA,GAFVmC,EAAQC,MAGd,QAMpB,C","sources":["component/protected/roomChat/RoomChatContents.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport gsap from 'gsap'\r\n\r\nimport { BsFillChatLeftTextFill } from 'react-icons/bs'\r\nimport { HiSpeakerphone } from 'react-icons/hi'\r\n\r\nimport Message from '../chat/message/Message'\r\n\r\nconst RoomChatContents = ({data, messages, setShowReply, setReplyToMsg}) => {\r\n   const {id, subID} = useParams()\r\n\r\n   const contentRef = useRef(null)\r\n   useEffect(() => {\r\n      gsap.fromTo(contentRef.current, \r\n         {x: -10, opacity: 0}, \r\n         {duration: 1, x: 0, opacity: 1, delay: .15, ease: \"elastic.out(1, 0.75)\"}\r\n      )\r\n   }, [id, subID])\r\n\r\n\r\n   // useEffect(() => {\r\n   //    if (messages?.length > 0) {\r\n   //       const parentElem = document.getElementById(\"messages\")\r\n   \r\n   //       const lastChild = parentElem.childNodes[parentElem.childNodes.length - 1]\r\n   //       lastChild.scrollIntoView({behavior: \"smooth\"})\r\n   //    }\r\n   // }, [messages])\r\n\r\n   const handleMiniRoomName = () => {\r\n      if (data) {\r\n         if (subID === data.mainMiniRoom)\r\n            return displayMainMiniRoomName()\r\n         else\r\n            return displayMiniRoomName()\r\n      }\r\n   }\r\n\r\n   const displayMainMiniRoomName = () => {\r\n      return (\r\n         <>\r\n            <div className='flex items-end gap-2'>\r\n               <div className='relative w-[7.05rem] h-[7.05rem] rounded-full bg-mainBg flex items-center justify-center'>\r\n                  <img src={data.roomIcon} alt=\"user Icon\" className='w-[6.75rem] h-[6.75rem] rounded-full object-cover'/>\r\n               </div>\r\n               <h1> {data.roomName} </h1>\r\n            </div>\r\n            <h4 className='mb-2 text-light_1/[.65] text-xs'> This is the beginning of {data.roomName} Room.</h4>\r\n         </>\r\n      )\r\n   }\r\n\r\n   const displayMiniRoomName = () => {\r\n      let miniRoom\r\n      for (let i = 0; i < data.mainRooms.length; ++i) {\r\n         miniRoom = data.mainRooms[i].miniRooms.find(miniRoom => miniRoom.miniRoomID === subID)\r\n         if (miniRoom)\r\n            break\r\n      }\r\n      const icon = miniRoom?.miniRoomType === 'text' \r\n      ? <BsFillChatLeftTextFill className='text-light_1/[.65]'/> \r\n      : <HiSpeakerphone className='text-light_1/[.65]'/>\r\n\r\n      return (\r\n         <>\r\n            <div className='flex items-end gap-2'>\r\n               <h1 className='flex items-center gap-2'>Welcome to - {icon} {miniRoom?.miniRoomName}</h1>\r\n            </div>\r\n            <h4 className='mb-2 text-light_1/[.65] text-xs'> This is the beginning of {miniRoom?.miniRoomName} mini Room.</h4>\r\n         </>\r\n      )\r\n   }\r\n\r\n   return (\r\n      <div className='flex flex-col h-full justify-start overflow-auto p-2' ref={contentRef}>\r\n         <div className='flex flex-col gap-2 border-b-2 border-light_1/[.7] mt-auto'>\r\n            {handleMiniRoomName()}\r\n         </div>\r\n\r\n         { messages &&\r\n            <ul className='flex flex-col gap-1 p-2' id='messages'>\r\n               { messages.map((message) => (\r\n                  <Message\r\n                     messages={messages} \r\n                     message={message} \r\n                     key={message.msgID}\r\n                     setShowReply={setShowReply}\r\n                     setReplyToMsg={setReplyToMsg}\r\n                  />\r\n               ))}\r\n            </ul>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default RoomChatContents"],"names":["data","messages","setShowReply","setReplyToMsg","useParams","id","subID","contentRef","useRef","useEffect","gsap","current","x","opacity","duration","delay","ease","displayMainMiniRoomName","className","src","roomIcon","alt","roomName","displayMiniRoomName","miniRoom","i","mainRooms","length","miniRooms","find","miniRoomID","icon","miniRoomType","miniRoomName","ref","mainMiniRoom","handleMiniRoomName","map","message","msgID"],"sourceRoot":""}